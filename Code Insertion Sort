You are given an integer array 'arr' of size 'N'.


You must sort this array using 'Insertion Sort' recursively.


 Note:
Change in the input array itself. You don't need to return or print the elements.
Example:
Input: ‘N’ = 7
'arr' = [2, 13, 4, 1, 3, 6, 28]

Output: [1 2 3 4 6 13 28]

Explanation: After applying insertion sort on the input array, the output is [1 2 3 4 6 13 28].
 Input format :
The first line contains an integer 'N' representing the size of the array.

The second line contains 'N' single space-separated integers representing the elements of the array.
Output Format :
Print the array elements in sorted order, separated by a single space.




public class Solution {  

    public static void insertionSort(int[] arr, int n) {
    	//Your code goes here
           for(int i=1;i<n;i++){
        //Insert ith element in sorted position
        int j=i-1;
        int temp=arr[i];
        while(j>=0 && arr[j]>temp){
            arr[j+1]=arr[j];
            j--;
          }
        //Position will be j+1;
        arr[j+1]=temp;
      }
  }

}
